int minSubsetSumDifference(vector<int>& arr, int n)
	{
        int totalsum = accumulate(arr.begin(),arr.end(),0);
        int k = totalsum;
        vector<vector<int>>dp(n+1,vector<int>(k+1,-1));

        for(int ind = 0; ind <= n; ind++)
        {
            dp[ind][0] = 1;
        }
        for(int sum = 1; sum <= k; sum++)
        {
            dp[0][sum] = 0;
        }
        for(int ind = 1; ind <= n; ind++)
        {
            for(int sum = 1; sum <= k; sum++)
            {
                if(arr[ind-1] <= sum)
                {
                    dp[ind][sum] = dp[ind-1][sum-arr[ind-1]] || dp[ind-1][sum];
                }
                else
                dp[ind][sum] = dp[ind-1][sum];
            }
        }
        int mini = INT_MAX;
        for(int sum = 0; sum <= k/2; sum++)
        {
            if(dp[n][sum] == 1)
            mini = min(mini,abs(2*sum-totalsum));
        }
        return mini;
    }
