///////// ********* top down *********///////
class Solution {

public:
    int longestPalindromeSubseq(string s) {
        string str1 = s;
        string str2 = s;
        reverse(str2.begin(),str2.end());
        int n1 = s.size();int n2 = n1;
        vector<vector<int>>dp(n1+1,vector<int>(n2+1,-1));
        for(int ind1 = 0; ind1 <= n1; ind1++)
        {
            dp[ind1][0]  = 0;
        }
        for(int ind2 = 0; ind2 <= n2; ind2++)
        {
            dp[0][ind2] = 0;
        }
        for(int ind1 = 1; ind1 <= n1; ind1++)
        {
            for(int ind2 = 1; ind2 <= n2; ind2++)
            {
                if(str1[ind1-1] == str2[ind2-1])
                {
                    dp[ind1][ind2] = 1+dp[ind1-1][ind2-1];
                }
                else
                {
                    dp[ind1][ind2] = max(dp[ind1-1][ind2],dp[ind1][ind2-1]);
                }
            }
        }
        return dp[n1][n2];
    }
};
